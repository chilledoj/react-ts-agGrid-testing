{"version":3,"sources":["pages/Users.tsx"],"names":[],"mappings":"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","file":"Users.26cbd73b.map","sourceRoot":"../src","sourcesContent":["import * as React from \"React\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { AgGridReact, AgGridReactProps } from \"ag-grid-react\";\n\nimport \"ag-grid/dist/styles/ag-grid.css\";\nimport \"ag-grid/dist/styles/ag-theme-dark.css\";\n\ninterface IProps extends RouteComponentProps {}\nclass Grid extends React.Component<IProps, AgGridReactProps> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      columnDefs: [\n        { headerName: \"ID\", field: \"userId\" },\n        { headerName: \"Username\", field: \"username\" },\n        { headerName: \"Status\", field: \"status\" }\n      ],\n      rowData: [\n        { userId: 1, username: \"USER001\", status: \"Active\" },\n        { userId: 2, username: \"USER002\", status: \"Inactive\" },\n        { userId: 3, username: \"ADMIN02\", status: \"Admin\" }\n      ]\n    };\n  }\n  handleRowClick(e: any) {\n    console.log(e.data.username);\n    this.props.history.push(\"/users/\" + e.data.username);\n  }\n  render() {\n    return (\n      <div\n        className=\"ag-theme-dark\"\n        style={{\n          height: \"600px\",\n          width: \"500px\"\n        }}\n      >\n        <AgGridReact\n          onRowClicked={this.handleRowClick.bind(this)}\n          columnDefs={this.state.columnDefs}\n          rowData={this.state.rowData}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Grid;\n"]}